hydra.Prms-testRequirement = "Test to verify snapshotIsolation for insert operation using test hook";

INITTASK     taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationTest taskMethod  = HydraTask_initializeDMLThreads
	threadGroups = snappyStoreThreads;

INITTASK     taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationTest taskMethod = HydraTask_initializeSelectThreads
	threadGroups = leadThreads;

INITTASK        taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationWithTestHook taskMethod = HydraTask_initializeTestHook
	threadGroups = leadThreads,snappyStoreThreads;


io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-duplicateSchemas = true;

INCLUDE $JTESTS/io/snappydata/hydra/snapshotIsolation/testSelectUsingJDBCClient.conf;

//task for running select queries
TASK        taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationWithTestHook taskMethod  = HydraTask_executeQueries
            maxThreads = 1
            threadGroups = leadThreads;

//task for running dmlOps
TASK        taskClass   = io.snappydata.hydra.snapshotIsolation.SnapshotIsolationWithTestHook taskMethod  = HydraTask_performDMLOp
            maxThreads = 1
            threadGroups = snappyStoreThreads;

io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-dmlOperations = ONEOF insert FOENO;

io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-dmlTables =
"app.orders"
;

io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-csvLocationforLargeData = "/export/shared/QA_DATA/northWind_1G";

io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-insertCsvFileNames =
"orders.csv"
;

io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-insertStmts =
"insert into app.orders values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)"
;

io.snappydata.hydra.snapshotIsolation.SnapshotIsolationPrms-selectStmts = ONEOF
"SELECT * FROM app.Orders"
"SELECT CompanyName FROM app.Customers WHERE CustomerID = (SELECT CustomerID FROM app.Orders WHERE OrderID = 10290)"
"SELECT e.EmployeeID, e.FirstName, e.LastName, o.OrderID, o.OrderDate FROM app.Employees e JOIN app.Orders o ON (e.EmployeeID = o.EmployeeID) ORDER BY o.OrderDate"
"SELECT e.FirstName, e.LastName, o.OrderID FROM app.Employees e JOIN app.Orders o ON (e.EmployeeID = o.EmployeeID) WHERE o.RequiredDate < o.ShippedDate ORDER BY e.LastName, e.FirstName"
"SELECT c.customerID, o.orderID FROM app.customers c INNER JOIN app.orders o ON c.CustomerID = o.CustomerID"
"SELECT OrderDate, ShippedDate, CustomerID, Freight FROM app.Orders WHERE OrderDate = '1997-05-19 00:00:00.000'"
"SELECT CompanyName FROM app.Customers  WHERE CustomerID IN (SELECT CustomerID FROM app.Orders WHERE OrderDate BETWEEN '1997-01-01 00:00:00.000' AND '1997-12-31 00:00:00.000')"
"SELECT o.OrderID, c.CompanyName, e.FirstName, e.LastName FROM app.Orders o JOIN app.Employees e ON (e.EmployeeID = o.EmployeeID) JOIN app.Customers c ON (c.CustomerID = o.CustomerID) WHERE o.ShippedDate > o.RequiredDate AND o.OrderDate > '1998-01-01 00:00:00.000' ORDER BY c.CompanyName"
FOENO
;